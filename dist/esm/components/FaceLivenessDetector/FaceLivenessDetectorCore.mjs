import*as e from"react";import{useInterpret as t,useActor as s}from"@xstate/react";import{livenessMachine as r}from"./service/machine/index.mjs";import"./service/types/liveness.mjs";import"./service/types/error.mjs";import"tslib";import"@tensorflow/tfjs-core";import"@tensorflow-models/blazeface";import"@tensorflow/tfjs-backend-wasm";import"@tensorflow/tfjs-backend-cpu";import"@aws-amplify/core";import"./service/utils/liveness.mjs";import"./service/utils/streamProvider.mjs";import"./service/utils/freshnessColorDisplay.mjs";import{View as i,Flex as o}from"@aws-amplify/ui-react";import{FaceLivenessDetectorProvider as m}from"./providers/FaceLivenessDetectorProvider.mjs";import{StartLiveness as n}from"./StartLiveness/StartLiveness.mjs";import{LivenessCheck as a}from"./LivenessCheck/LivenessCheck.mjs";import{getDisplayText as c}from"./utils/getDisplayText.mjs";const p="liveness-detector";function l(l){const{disableInstructionScreen:f=!1,components:v,config:u,displayText:y}=l,x=e.useRef(null),{hintDisplayText:d,cameraDisplayText:j,instructionDisplayText:D,streamDisplayText:T,errorDisplayText:b}=c(y),h=t(r,{devTools:"development"===process.env.NODE_ENV,context:{componentProps:Object.assign(Object.assign({},l),{config:null!=u?u:{}})}}),[E,w]=s(h),L=E.matches("start")||E.matches("userCancel"),g=e.useCallback((()=>{w({type:"BEGIN"})}),[w]);return e.useLayoutEffect((()=>{f&&L&&g()}),[g,f,L]),e.createElement(i,{className:p,testId:p},e.createElement(m,{componentProps:l,service:h},e.createElement(o,{direction:"column",ref:x},L?e.createElement(n,{beginLivenessCheck:g,components:v,instructionDisplayText:D}):e.createElement(a,{hintDisplayText:d,cameraDisplayText:j,streamDisplayText:T,errorDisplayText:b,components:v}))))}export{l as default};
