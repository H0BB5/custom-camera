import*as e from"react";import{Flex as t,Loader as r,View as o}from"@aws-amplify/ui-react";import"../service/machine/index.mjs";import{FaceMatchState as a,IlluminationState as n}from"../service/types/liveness.mjs";import"../service/types/error.mjs";import"tslib";import"@tensorflow/tfjs-core";import"@tensorflow-models/blazeface";import"@tensorflow/tfjs-backend-wasm";import"@tensorflow/tfjs-backend-cpu";import"@aws-amplify/core";import"../service/utils/liveness.mjs";import"../service/utils/streamProvider.mjs";import"../service/utils/freshnessColorDisplay.mjs";import{useLivenessActor as i}from"../hooks/useLivenessActor.mjs";import{createLivenessSelector as s,useLivenessSelector as c}from"../hooks/useLivenessSelector.mjs";import"@aws-amplify/ui";import{Toast as l}from"./Toast.mjs";import{Overlay as m}from"./Overlay.mjs";import{LivenessClassNames as h}from"../types/classNames.mjs";const f=s((e=>e.context.errorState)),T=s((e=>e.context.faceMatchAssociatedParams.faceMatchState)),u=s((e=>e.context.faceMatchAssociatedParams.illuminationState)),p=s((e=>e.context.isFaceFarEnoughBeforeRecording)),O=s((e=>e.context.faceMatchStateBeforeStart)),E=({hintDisplayText:s})=>{const[E]=i(),x=c(f),F=c(T),d=c(u),v=c(O),y=c(p),j=E.matches("checkFaceDetectedBeforeStart"),C=E.matches("checkFaceDistanceBeforeRecording"),g=E.matches("recording"),A=E.matches("notRecording"),N=E.matches("uploading"),S=E.matches("checkSucceeded"),M=E.matches("checkFailed"),D=E.matches({recording:"flashFreshnessColors"}),I={[a.CANT_IDENTIFY]:s.hintCanNotIdentifyText,[a.FACE_IDENTIFIED]:s.hintTooFarText,[a.TOO_MANY]:s.hintTooManyFacesText,[a.TOO_CLOSE]:s.hintTooCloseText,[a.TOO_FAR]:s.hintTooFarText,[a.MATCHED]:s.hintHoldFaceForFreshnessText},_={[n.BRIGHT]:s.hintIlluminationTooBrightText,[n.DARK]:s.hintIlluminationTooDarkText,[n.NORMAL]:s.hintIlluminationNormalText},k=(()=>{if(!(x||M||S)){if(!g){if(j)return v===a.TOO_MANY?e.createElement(l,null,I[v]):e.createElement(l,null,s.hintMoveFaceFrontOfCameraText);if(C&&!1===y)return e.createElement(l,null,s.hintTooCloseText);if(A)return e.createElement(l,null,e.createElement(t,{className:h.HintText},e.createElement(r,null),e.createElement(o,null,s.hintConnectingText)));if(N)return e.createElement(m,{className:h.OpaqueOverlay,anchorOrigin:{horizontal:"center",vertical:"end"}},e.createElement(l,null,e.createElement(t,{className:h.HintText},e.createElement(r,null),e.createElement(o,null,s.hintVerifyingText))));if(d&&d!==n.NORMAL)return e.createElement(l,null,_[d])}return D?e.createElement(l,{size:"large",variation:"primary"},s.hintHoldFaceForFreshnessText):g&&!D?e.createElement(l,{size:"large",variation:F===a.TOO_CLOSE?"error":"primary"},F===a.TOO_CLOSE?I[a.TOO_CLOSE]:I[a.TOO_FAR]):null}})();return k||null};export{E as Hint,f as selectErrorState,T as selectFaceMatchState,O as selectFaceMatchStateBeforeStart,u as selectIlluminationState,p as selectIsFaceFarEnoughBeforeRecording};
